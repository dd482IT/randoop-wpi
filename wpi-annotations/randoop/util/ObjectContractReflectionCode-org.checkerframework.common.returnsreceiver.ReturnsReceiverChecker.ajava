package randoop.util;

import java.util.Arrays;
import randoop.contract.ObjectContract;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.common.returnsreceiver.ReturnsReceiverChecker")
public final class ObjectContractReflectionCode extends ReflectionCode {

    final  ObjectContract c;

    final  Object  [] objs;

    public ObjectContractReflectionCode(final  ObjectContract c, final  Object ... objs) {
        this.c = c;
        this.objs = objs;
    }

    protected void runReflectionCodeRaw( ObjectContractReflectionCode this) {
        try {
            // always a boolean value (true or false)
            retval = c.evaluate(objs);
        } catch (Throwable e) {
            exceptionThrown = e;
        }
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public  String toString( ObjectContractReflectionCode this) {
        return "Check of ObjectContract " + c + " args: " + Arrays.toString(objs) + status();
    }
}
