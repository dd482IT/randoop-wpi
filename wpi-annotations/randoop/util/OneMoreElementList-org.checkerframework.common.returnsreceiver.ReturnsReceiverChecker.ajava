package randoop.util;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.common.returnsreceiver.ReturnsReceiverChecker")
public final class OneMoreElementList<E> implements SimpleList<E>, Serializable {

    private static final   long serialVersionUID = 1332963552183905833L;

    /**
     * The last element in this.
     */
    public final E lastElement;

    /**
     * All but the last element in this.
     */
    public final  SimpleList<E> list;

    /**
     * The size of this.
     */
    public final   int size;

    public OneMoreElementList( SimpleList<E> list, E extraElement) {
        this.list = list;
        this.lastElement = extraElement;
        this.size = list.size() + 1;
    }

    @org.checkerframework.dataflow.qual.Pure
    public   int size( OneMoreElementList<E> this) {
        return size;
    }

    @org.checkerframework.dataflow.qual.Pure
    public   boolean isEmpty( OneMoreElementList<E> this) {
        return size == 0;
    }

    @org.checkerframework.dataflow.qual.Pure
    public E get( OneMoreElementList<E> this,   int index) {
        if (index < size - 1) {
            return list.get(index);
        }
        if (index == size - 1) {
            return lastElement;
        }
        throw new IndexOutOfBoundsException("No such element: " + index);
    }

    @org.checkerframework.dataflow.qual.Pure
    public  SimpleList<E> getSublist( OneMoreElementList<E> this,   int index) {
        if (index == size - 1) {
            // is lastElement
            return this;
        }
        // Not the last element, so recurse.
        if (index < size - 1) {
            return list.getSublist(index);
        }
        throw new IndexOutOfBoundsException("No such index: " + index);
    }

    public  List<E> toJDKList( OneMoreElementList<E> this) {
        List<E> result = new ArrayList<>();
        result.addAll(list.toJDKList());
        result.add(lastElement);
        return result;
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public  String toString( OneMoreElementList<E> this) {
        return toJDKList().toString();
    }
}
