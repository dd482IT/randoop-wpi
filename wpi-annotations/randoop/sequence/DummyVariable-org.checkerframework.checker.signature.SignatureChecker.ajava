package randoop.sequence;

import randoop.types.Type;

/**
 * A dummy variable, to ensure that parameter lists are the expected length.
 */
@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.signature.SignatureChecker")
public class DummyVariable extends Variable {

    /**
     * The only DummyVariable that exists.
     */
    public static final @org.checkerframework.checker.signature.qual.SignatureUnknown DummyVariable DUMMY = new DummyVariable();

    /**
     * Create a DummyVariable.
     */
    private DummyVariable() {
    }

    @org.checkerframework.dataflow.qual.Pure
    public @org.checkerframework.checker.signature.qual.Identifier String toString(@org.checkerframework.checker.signature.qual.SignatureUnknown DummyVariable this) {
        return "dummy";
    }

    @org.checkerframework.dataflow.qual.Pure
    public  @org.checkerframework.checker.signature.qual.SignatureUnknown boolean equals(@org.checkerframework.checker.signature.qual.SignatureUnknown DummyVariable this, @org.checkerframework.checker.signature.qual.SignatureUnknown Object o) {
        return o == this;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  @org.checkerframework.checker.signature.qual.SignatureUnknown int hashCode(@org.checkerframework.checker.signature.qual.SignatureUnknown DummyVariable this) {
        return 0;
    }

    @org.checkerframework.dataflow.qual.Pure
    public Type getType(@org.checkerframework.checker.signature.qual.SignatureUnknown DummyVariable this) {
        throw new Error("Not implemented");
    }

    @org.checkerframework.dataflow.qual.Pure
    public Statement getDeclaringStatement(@org.checkerframework.checker.signature.qual.SignatureUnknown DummyVariable this) {
        throw new Error("Not implemented");
    }

    @org.checkerframework.dataflow.qual.Pure
    public int getDeclIndex(@org.checkerframework.checker.signature.qual.SignatureUnknown DummyVariable this) {
        throw new Error("Not implemented");
    }

    @org.checkerframework.dataflow.qual.Pure
    public @org.checkerframework.checker.signature.qual.Identifier String getName(@org.checkerframework.checker.signature.qual.SignatureUnknown DummyVariable this) {
        return "dummy";
    }

    @org.checkerframework.dataflow.qual.Pure
    public boolean shouldInlineLiterals(@org.checkerframework.checker.signature.qual.SignatureUnknown DummyVariable this) {
        throw new Error("Not implemented");
    }
}
