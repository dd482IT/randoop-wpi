package randoop.contract;

import java.util.Arrays;
import java.util.Collection;
import randoop.types.JavaTypes;
import randoop.types.TypeTuple;

/**
 * The contract: {@code c.toArray().length == c.size()} for all Collections c.
 */
@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.signature.SignatureChecker")
public final class SizeToArrayLength extends ObjectContract {

    private static final @org.checkerframework.checker.signature.qual.SignatureUnknown SizeToArrayLength instance = new SizeToArrayLength();

    private SizeToArrayLength() {
    }

    @org.checkerframework.dataflow.qual.Pure
    public static @org.checkerframework.checker.signature.qual.SignatureUnknown SizeToArrayLength getInstance() {
        return instance;
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public  @org.checkerframework.checker.signature.qual.SignatureUnknown boolean evaluate(@org.checkerframework.checker.signature.qual.SignatureUnknown SizeToArrayLength this, @org.checkerframework.checker.signature.qual.SignatureUnknown Object@org.checkerframework.checker.signature.qual.SignatureUnknown ... objects) {
        assert objects != null && objects.length == 1;
        Object o = objects[0];
        if (o instanceof Collection) {
            Collection<?> c = (Collection<?>) o;
            assert c != null;
            return c.size() == c.toArray().length;
        }
        return true;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  @org.checkerframework.checker.signature.qual.SignatureUnknown int getArity(@org.checkerframework.checker.signature.qual.SignatureUnknown SizeToArrayLength this) {
        return 1;
    }

    /**
     * The arguments to which this contract can be applied.
     */
    static @org.checkerframework.checker.signature.qual.SignatureUnknown TypeTuple inputTypes = new TypeTuple(Arrays.asList(JavaTypes.COLLECTION_TYPE));

    @org.checkerframework.dataflow.qual.Pure
    public @org.checkerframework.checker.signature.qual.SignatureUnknown TypeTuple getInputTypes(@org.checkerframework.checker.signature.qual.SignatureUnknown SizeToArrayLength this) {
        return inputTypes;
    }

    @org.checkerframework.dataflow.qual.Pure
    public @org.checkerframework.checker.signature.qual.SignatureUnknown String toCommentString(@org.checkerframework.checker.signature.qual.SignatureUnknown SizeToArrayLength this) {
        return "x0.toArray().length == x0.size()";
    }

    @org.checkerframework.dataflow.qual.Pure
    public @org.checkerframework.checker.signature.qual.Identifier String get_observer_str(@org.checkerframework.checker.signature.qual.SignatureUnknown SizeToArrayLength this) {
        return "SizeToArrayLength";
    }

    public @org.checkerframework.checker.signature.qual.SignatureUnknown String toCodeString(@org.checkerframework.checker.signature.qual.SignatureUnknown SizeToArrayLength this) {
        StringBuilder b = new StringBuilder();
        b.append("org.junit.Assert.assertEquals(");
        b.append("\"Contract failed: " + toCommentString() + "\", ");
        b.append("x0.toArray().length, x0.size()");
        b.append(");");
        return b.toString();
    }
}
