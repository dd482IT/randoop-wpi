package randoop.main;

import org.checkerframework.checker.nullness.qual.Nullable;
import org.plumelib.reflection.ReflectionPlume;
import randoop.Globals;

/**
 * Exception for classname errors.
 */
@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.mustcall.MustCallChecker")
public class RandoopClassNameError extends Error {

    private static final  @org.checkerframework.checker.mustcall.qual.MustCall({}) long serialVersionUID = -3625971508842588810L;

    /**
     * The erroneous class name.
     */
    public @org.checkerframework.checker.mustcall.qual.MustCall({}) String className;

    /**
     * Create a new RandoopClassNameError.
     *
     * @param className the erroneous class name
     * @param message the detail message
     */
    public RandoopClassNameError(@org.checkerframework.checker.mustcall.qual.MustCall({}) String className, @org.checkerframework.checker.mustcall.qual.MustCall({}) String message) {
        this(className, message, null);
    }

    /**
     * Create a new RandoopClassNameError.
     *
     * @param className the erroneous class name
     * @param message the detail message
     * @param cause the underlying exception
     */
    public RandoopClassNameError(@org.checkerframework.checker.mustcall.qual.MustCall({}) String className, @org.checkerframework.checker.mustcall.qual.MustCall({}) String message, @org.checkerframework.checker.mustcall.qual.MustCall({}) Throwable cause) {
        super(message + Globals.lineSep + "Classpath:" + Globals.lineSep + ReflectionPlume.classpathToString(), cause);
        this.className = className;
    }
}
