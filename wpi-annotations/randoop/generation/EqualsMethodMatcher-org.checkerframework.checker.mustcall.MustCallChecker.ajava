package randoop.generation;

import java.util.LinkedHashSet;
import java.util.Set;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.mustcall.MustCallChecker")
public class EqualsMethodMatcher implements StateMatcher {

    private final @org.checkerframework.checker.mustcall.qual.MustCall({}) Set<Object> cache = new LinkedHashSet<>();

    public  @org.checkerframework.checker.mustcall.qual.MustCall({}) boolean add(@org.checkerframework.checker.mustcall.qual.MustCall({}) EqualsMethodMatcher this, @org.checkerframework.checker.mustcall.qual.MustCall({}) Object object) {
        try {
            return this.cache.add(object);
        } catch (Throwable e) {
            // This could happen, because we're actually running code under test.
            return false;
        }
    }

    @org.checkerframework.dataflow.qual.Pure
    public  @org.checkerframework.checker.mustcall.qual.MustCall({}) int size(@org.checkerframework.checker.mustcall.qual.MustCall({}) EqualsMethodMatcher this) {
        return this.cache.size();
    }
}
