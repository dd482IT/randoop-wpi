package randoop.test;

import java.util.function.Predicate;
import randoop.sequence.ExecutableSequence;

/**
 * Returns true if the sequence is an error test (has a failure).
 */
@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.resourceleak.ResourceLeakChecker")
public class ErrorTestPredicate implements Predicate<ExecutableSequence> {

    @org.checkerframework.checker.calledmethods.qual.EnsuresCalledMethods(value = { "#1" }, methods = { "hasFailure" })
    @org.checkerframework.dataflow.qual.Pure
    public  @org.checkerframework.checker.calledmethods.qual.CalledMethods({}) boolean test(@org.checkerframework.checker.calledmethods.qual.CalledMethods({}) ErrorTestPredicate this, @org.checkerframework.checker.calledmethods.qual.CalledMethods({}) ExecutableSequence eseq) {
        return eseq.hasFailure();
    }
}
