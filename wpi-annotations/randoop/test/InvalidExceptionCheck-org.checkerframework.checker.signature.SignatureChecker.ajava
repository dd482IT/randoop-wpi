package randoop.test;

/**
 * An {@code InvalidExceptionCheck} represents the occurrence of an exception tagged as an invalid
 * behavior during {@code Check} generation.
 */
@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.signature.SignatureChecker")
public class InvalidExceptionCheck extends ExceptionCheck {

    public InvalidExceptionCheck(@org.checkerframework.checker.signature.qual.SignatureUnknown Throwable exception,  @org.checkerframework.checker.signature.qual.SignatureUnknown int statementIndex, @org.checkerframework.checker.signature.qual.ClassGetName String catchClassName) {
        super(exception, statementIndex, catchClassName);
    }

    protected void appendCatchBehavior(@org.checkerframework.checker.signature.qual.SignatureUnknown InvalidExceptionCheck this, @org.checkerframework.checker.signature.qual.SignatureUnknown StringBuilder b) {
        b.append(String.format("// statement threw an invalid exception %s during test generation%n", exception.getClass().getName()));
    }

    @org.checkerframework.dataflow.qual.Pure
    protected void appendTryBehavior(@org.checkerframework.checker.signature.qual.SignatureUnknown InvalidExceptionCheck this, @org.checkerframework.checker.signature.qual.SignatureUnknown StringBuilder b) {
        // do nothing
    }
}
